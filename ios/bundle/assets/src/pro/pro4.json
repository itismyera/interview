[
  {
    "index": 0.0,
    "title": "React Native布局详细指南",
    "ans": "一款好的APP离不了一个漂亮的布局，本文章将向大家分享React Native中的布局方式FlexBox。 \n在React Native中布局采用的是FleBox(弹性框)进行布局。\n\nFlexBox提供了在不同尺寸设备上都能保持一致的布局方式。FlexBox是CSS3弹性框布局规范，目前还处于最终征求意见稿 (Last Call Working Draft)阶段，并不是所有的浏览器都支持Flexbox。但大家在做React Native开发时大可不必担心FlexBox的兼容性问题，因为既然React Native选择用FlexBox布局，那么React Native对FlexBox的支持自然会做的很好。\n\n宽和高\n在学习FlexBox之前首先要清楚一个概念“宽和高”。一个组件的高度和宽度决定了它在屏幕上的尺寸，也就是大小。"
  },
  {
    "index": 1.0,
    "title": "高性能的简单列表组件，支持下面这些常用的功能：",
    "ans": "完全跨平台。\n支持水平布局模式。\n行组件显示或隐藏时可配置回调事件。\n支持单独的头部组件。\n支持单独的尾部组件。\n支持自定义行间分隔线。\n支持下拉刷新。\n支持上拉加载。\n支持跳转到指定行（ScrollToIndex）。\n支持多列布局。"
  },
  {
    "index": 2.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 3.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 4.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 5.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 6.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 7.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 8.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 9.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 10.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 11.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 12.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 13.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 14.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 15.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 16.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 17.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 18.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 19.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 20.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 21.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 22.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 23.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 24.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 25.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 26.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 27.0,
    "title": "",
    "ans": ""
  },
  {
    "index": 28.0,
    "title": "",
    "ans": ""
  }
]